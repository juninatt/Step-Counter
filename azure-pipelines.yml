# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: false
    testResultsFiles: '**/TEST-*.xml'
    goals: 'package'
- task: AzureWebApp@1
  inputs:
    azureSubscription: 'BoostAppResourceConnection'
    appType: 'webAppLinux'
    appName: 'boostappstepAPI'
    package: '$(System.DefaultWorkingDirectory)/**/*.jar'
    runtimeStack: 'JAVA|11-java11'
    startUpCommand: 'mvn spring-boot:run'
#- task: Docker@2
#  displayName: Build image
#  inputs:
#    containerRegistry: 'BoostAppConnection'
#    repository: 'boostapp_step'
#    command: 'build'
#    arguments: '--build-arg BOOSTAPPDBUSER=$(BOOSTAPPDBUSER) --build-arg BOOSTAPPDBSECRET=$(BOOSTAPPDBSECRET)'
#    Dockerfile: '**/Dockerfile'
#    tags: latest
#- task: Docker@2
#  displayName: Push image
#  inputs:
#    containerRegistry: 'BoostAppConnection'
#    repository: 'boostapp_step'
#    command: 'push'
#    tags: latest

#- task: Docker@2
#  displayName: Build and push
#  inputs:
#    containerRegistry: 'BoostAppConnection'
#    repository: 'boostapp_step'
#    command: 'buildAndPush'
#    Dockerfile: '**/Dockerfile'
#    tags: latest
